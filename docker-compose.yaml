services:
  traefik:
    image: traefik
    container_name: traefik
    restart: unless-stopped
    configs:
      - source: traefik
        target: /etc/traefik/traefik.yaml
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - ./letsencrypt:/letsencrypt
    environment:
      CF_DNS_API_TOKEN_FILE: /run/secrets/cf-dns-api-token
    secrets:
      - cf-dns-api-token
    networks:
      - default
      - traefik-docker-socket
    depends_on:
      - traefik-docker-socket-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.rule=Host(`skeblow.net`, `www.skeblow.net`)"
      - "traefik.http.routers.api.service=api@internal"

  traefik-docker-socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: traefik-docker-socket-proxy
    privileged: true
    restart: unless-stopped
    networks:
      - traefik-docker-socket
    environment:
      CONTAINERS: 1
      SERVICES: 1
      NETWORKS: 1
      TASKS: 1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  skeblow-bfpt:
    extends:
      file: ../bug-free-palm-tree/docker-compose.yaml
      service: bfpt
    container_name: "skeblow-bfpt"
    networks:
      - default
      - bfpt
    depends_on:
      - traefik
      - skeblow-bfpt-db
    environment:
      - DB_HOST=skeblow-bfpt-db
    command: deno task prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bfpt.rule=Host(`bfpt.skeblow.net`)"
      - "traefik.http.routers.bfpt.entrypoints=web"
      - "traefik.http.routers.bfpt.tls=true"
      - "traefik.http.routers.bfpt.tls.certresolver=letsencrypt"
      - "traefik.http.services.bfpt.loadbalancer.server.port=8000"

  skeblow-bfpt-db:
    extends:
      file: ../bug-free-palm-tree/docker-compose.yaml
      service: bfpt-db
    container_name: "skeblow-bfpt-db"
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - bfpt

  skeblow-photos:
    extends:
      file: ../photoprism/docker-compose.yaml
      service: photoprism
    container_name: "skeblow-photos"
    environment:
      PHOTOPRISM_DATABASE_SERVER: "skeblow-photos-mariadb:3306"
      PHOTOPRISM_SITE_URL: "https://photos.skeblow.net/"
      PHOTOPRISM_DISABLE_TLS: "true"
      PHOTOPRISM_DEFAULT_TLS: "false"
    depends_on:
      - traefik
      - skeblow-photos-mariadb
    networks:
      - default
      - photoprism
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.photos.rule=Host(`photos.skeblow.net`)"
      - "traefik.http.routers.photos.entrypoints=web"
      - "traefik.http.routers.photos.tls=true"
      - "traefik.http.routers.photos.tls.certresolver=letsencrypt"
    profiles:
      - photos

  skeblow-photos-mariadb:
    extends:
      file: ../photoprism/docker-compose.yaml
      service: photoprism-mariadb
    container_name: "skeblow-photos-mariadb"
    networks: 
      - photoprism
    profiles:
      - photos

networks:
  traefik-docker-socket:
  default:
  bfpt:
  photoprism:

configs:
  traefik:
    file: traefik.yaml

secrets:
  cf-dns-api-token:
    file: secrets/cf-dns-api-token.txt

volumes:
  db-data:
  deno-cache:
